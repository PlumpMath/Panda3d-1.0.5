------------------------  RELEASE 1.0.5  ------------------------

This release consists mainly of compatibility improvements.

  * Now compiles under MS Visual Toolkit (makefile changes)

  * Now compiles under Mandrake 10.1 (a fix in the makefile)

  * Now compiles under Debian Sarge (a fix in the VRML lexer)

  * Now compiles under Ubuntu HH (same as DEBIAN SARGE)

  * Add code for building debian 'deb' archives.

  * Fix scene editor and particle panel so they work on linux.

  * Add support for --no-python to makepanda.

  * Tidied up makepanda a bit.

------------------------  RELEASE 1.0.4  ------------------------

  * This version includes the new Max exporter and the new Maya
    export panel.

  * We have added the --genman option to makepanda (to
    regenerate the API reference manual).  This uses the epydoc
    documentation-generation system.

  * Several bugs in the new tutorials have been repaired.

  * A bug in fmod positional audio has been fixed.

  * Makepanda now puts the maya and max plugins in a
    separate 'plugins' directory, for convenience.

  * The 'libpandaegg' library has been exported to python.

------------------------  RELEASE 1.0.3  ------------------------

  * The binary release contains a brand new collection of
    sample programs.  The new sample programs are much better.

  * If you install the windows binary release, the
    sample programs can now be run from the start menu.

  * Lighting under DirectX was broken. This has been repaired.

  * The binary release has been compiled with support for pstats.
    (Previously, it was compiled with pstats disabled).

  * Various changes to make panda3d more compatible with
    the 'epydoc' documentation-generation system.

------------------------  RELEASE 1.0.2  ------------------------

This is a bugfix release.

  * makepanda contained a bug: it was compiling maya2egg6
    against the Maya 5.0 libraries, making it largely useless.
    This is fixed.

  * Maya2egg65 has been added, for Maya 6.5 users.

  * The configuration combo "want-tk=false, want-directtools=true"
    used to confuse panda, because directtools uses Tk.  Now
    it's smart enough to do the right thing.

  * When you ask controlJoint to create a control node for
    you, it initializes the control node to the joint's initial
    position.

  * The scene editor supposedly works now.  We'll see.

  * The models directory was missing the animation 'panda-walk4',
    which is necessary for the tutorial.

  * A new directory 'win-extras' has been added to the
    thirdparty tree.  This contains some miscellaneous python
    libraries needed at the Entertainment Technology Center.
    The script that builds the windows installer will include
    these libraries in the distribution.

------------------------  RELEASE 1.0.1  ------------------------

This is a bugfix release.

  * In the previous binary release, Config.prc did not contain a
    load-display line.  This confuses pview.  Pview is being fixed,
    but until then, the load-display line has been restored.

  * The Max and Maya plugins were inadvertently omitted from the
    previous binary release.  This has been corrected.

  * An error in the distributed object networking layer has
    been fixed.  The error only affected those who were trying to
    write LAN games using the CMU LAN server and p2p messages.

  * An error in the physics code has been corrected.

  * Python Megawidgets (pmw), which is required for "directtools",
    was not supplied in the previous release.  We are now including
    pmw.  In the Linux RPMs, to avoid overwriting any
    distribution-supplied pmw package, we put this package
    into /usr/share/panda3d.

  * To be consistent, we moved all the other python code into
    /usr/share/panda3d as well.  This requires a file 'panda.pth'
    in the python lib directory.

  * In the binary RPMs, the file permissions of the python
    source files have been changed to 555, so that even if root
    runs panda, the '.pyc' files will not be modified or regenerated.

------------------------  RELEASE 1.0.0  ------------------------

Configuration, installation, and execution environments:

  * This is the introduction of the new Panda version numbering
    system.  The Panda version will be represented with three
    dot-separated numbers.  The first number, the major version, will
    change only very rarely.  The second number, the minor version,
    will increment frequently, with each new feature release.  The
    third number will increment as needed to indicate bugfix releases
    on the minor version.

  * Use PandaSystem::get_version_string() (or
    PandaSystem.getVersionString() in Python) to return the version
    number of the currently-running Panda.

  * New runtime config system allows for dynamic loading of prc files
    and supports querying of available variable names.  Use
    ConfigVariableString, ConfigVariableBool, etc. to get a value from
    the prc file(s); use the ConfigVariableManager and
    ConfigPageManager classes (or the cvMgr and cpMgr global objects
    in Python) to make general queries.

  * The ppremake build system now properly detects intra-tree
    dependencies, but only if each tree is fully built and installed
    before ppremake is run within the next dependent tree.  Requires
    using ppremake version 1.18 or higher.

Miscellaneous:

  * New support for encrypted streams, including encrypted subfiles
    within a multifile, using the OpenSSL encryption library.  Adds
    pencrypt and pdecrypt programs.

  * The default port for PStats is now 5185, to avoid a conflict with
    Instant Messenger.

  * New "smooth" checkbox on PStats graphs provides a better sense of
    overall trends when graphs are noisy.

  * The meaning of the three components of HPR angles has been
    officially changed, in particular the meaning of the R component.
    This change was introduced to make the three components more
    consistent with each other, and to make P and R work together in a
    more sensible way.  Existing code which used hard-coded HPR angles
    may be invalidated by this change.  To convert existing code, you
    should use the global function old_to_new_hpr() to determine what
    new HPR triple that corresponds to an old HPR triple.  As a
    temporary stopgap, you may define temp-hpr-fix 0 in your prc file.

  * Add support for weak reference counts using the WeakPointerTo
    class.

  * Add optional support for STL's semistandard hashing containers,
    e.g. hash_map and hash_set.

  * Panda no longer requires any registry keys or environment
    variables. This means it is now possible to run panda directly
    from a CD, install multiple copies of panda on a single machine,
    or install panda by copying the tree from another computer.
    Note that the installer does add the panda 'bin' directory to
    your PATH, and it does store an uninstall key in the registry,
    but neither of these is needed for panda to function.

  * The 'makepanda' build system is now capable of building
    prepackaged games for Windows.  These prepackaged games are simply
    copies of panda with the game code included, some of the
    unnecessary stuff stripped out, and some changes to the start
    menu.  See "Airblade - Installer" on the panda downloads page
    for an example.

  * This is the first release to include not just a binary installer
    for windows, but also binary RPMs for fedora 2, fedora 3, and
    redhat 9.

  * All of the sample programs have been tested.  The ones that didn't
    work have been removed, the ones that do work have been (lightly)
    documented.

  * In the Win32 binary release, the 'config.prc' file has been moved
    to the 'etc' directory.  This is to make it consistent with the
    Linux version.

Rendering system:

  * Multitexture support is now part of Panda.  This introduces the
    TextureStage and TexCoordName classes, as well as new interfaces
    like NodePath::add_texture().  As of the present release,
    multitexture is only supported when using the OpenGL renderer.

  * Support for programmable shaders is now possible using the Cg
    shader language.  Assign a CgShaderAttrib to a node to apply a
    programmable shader.

  * New support for the Helix library allows playing of a streaming
    movie in a Panda texture.  Presently only supported on Windows.

  * Deprecated the old "win-origin-x" and "win-origin-y" prc variables
    in favor of "win-origin", which takes two numbers separated by a
    space.  Similarly with "win-width" and "win-height", in favor of
    "win-size".

  * Deprecated the old Camera::set_scene() interface; now a Camera
    implicitly renders whatever scene graph it is parented to.

  * Removed the old GraphicsLayer and GraphicsChannel classes.
    Instead of using these interfaces, you can now create any number
    of DisplayRegions directly on the window.

  * Offscreen render-to-a-texture will now be properly oriented under
    DirectX (previously, it would render the texture image upside-down
    and backward).

  * Support for automatic keystone correction caused by an off-axis
    physical projector using Lens::set_keystone().

  * New framebuffer-mode prc variable allows explicit control over the
    default framebuffer properties requested by Panda, including
    whether software or hardware rendering is required.

  * Added "multisample" transparency mode (alpha keyword "ms" in an
    egg file), which allows good-quality transparency (especially for
    alpha cutouts) without requiring back-to-front sorting, and
    without artifacts from improper sorting.  This does require
    special multisample hardware capabilities, however.  Presently
    supported in OpenGL mode only.  Automatic fallback to "binary"
    transparency mode if multisample is not supported on a given
    platform.

  * New cursor-filename and icon-filename config variables replace the
    old win32-mono-cursor and win32-window-icon variables.  Also,
    runtime control over these properties is now provided by the
    WindowProperties class.

  * Better management of potential memory leaks due to cyclic
    reference counts in the RenderState and TransformState caches.
    Now cycles are automatically detected and broken.

Scene graph:

  * GeomNodes now have a CollideMask, just like CollisionNodes, which
    deprecates the old set_collide_geom() interface to detect
    collisions with visible geometry.  There is a new NodePath
    interface for querying and setting the collide masks for single
    nodes or for entire subgraphs.

  * New NodePath interfaces to control lighting eliminate the need to
    create an explicit LightAttrib.  The new lighting interfaces are
    designed to be similar to the new multitexture interfaces.

  * New NodePath interfaces to control the texture matrix, including a
    new project_texture() method to enable hardware-assisted
    projective texturing.

  * New NodePath::flatten_multitex() interface to bake in certain
    kinds of multitexture effects into a single texture, generated
    on-the-fly.

  * New options for ColorBlendAttrib and RenderModeAttrib.

  * NodePath::set_transparancy() now accepts a
    TransparencyAttrib::Mode parameter to specify exactly what kind of
    transparency you'd like.

  * New NodePath::set_render_mode() interface accepts a
    RenderModeAttrib::Mode parameter, deprecating
    set_render_mode_filled() and set_render_mode_wireframe().

  * LerpQuatInterval can be used as a drop-in replacement for
    LerpHprInterval; it performs spherical lerps in quaternion space,
    rather than lerping each component of a HPR individually.
    LerpHprInterval is not deprecated; it remains useful within its
    limitations.

  * New DirectSliderBar gui object implements a standard slider bar
    with a thumb (like a window scroll bar).

  * Lighting normals are now automatically counterscaled properly when
    lighting is enabled in the presence of a scale, uniform or
    nonuniform, in the scene graph.  You can also use
    RescaleNormalAttrib for explicit control over this behavior.

  * Improvements to RopeNode for rendering splines in various
    representations.

Collisions and physics systems:

  * New CollisionSegment and CollisionInvSphere collision solids.

  * The collision system now reports normals for intersections
    detected from collision rays, segments, and lines.

  * Several improvements to the physics system.

Model converters:

  * x2egg and egg2x added to converters, as well as to inline
    conversion supported via ptloader.  This adds support for
    DirectX's native so-called "retained-mode" file format.  This file
    format supports animation and joint hierarchies as well as basic
    polygonal models.

  * vrml2egg added to converters, as well as to inline conversion
    supported via ptloader.  This adds support for VRML 2.0 model
    files only.

  * Added -noabs option to many model converters, to help detect
    problems with unintended absolute path references.

  * Added egg2bam -flatten and -combine-geoms.

  * We now have working exporters for Max5, Max6, Max7, Maya5, Maya6.
    (Update: these were accidentally omitted from the binary release)

  * The Max exporter is dramatically improved: it now includes support
    for character studio, and the polygon winding bug has been fixed.


------------------------  RELEASE 2004-07-27  ------------------------

Configuration, installation, and execution environments:

  * We have moved to a new, more explicit naming convention for our
    import statements.  Rather than installing all Python files into
    one big flat namespace, we now import them from their appropriate
    directories, e.g. "from direct.actor import Actor".

  * "from ShowBaseGlobal import *" is replaced with "import
    direct.directbase.DirectStart" and/or "from pandac.PandaModules
    import *".

  * The old "generatePythonCode" script has been replaced with a new
    "genPyCode" script that automates the Python wrapper generation
    process without requiring any special parameters.

  * The old dependencies on environment variables have been removed.
    There are no longer requirements for any environment variables to
    be set in either the build process or the runtime environment
    (although a few optional environment variables remain to allow
    custom configuration).

  * INSTALL document greatly enhanced for clarity.

  * An automatic build script is now provided to further simplify
    building Panda3D for Unix and Cygwin users.

  * The old "Configrc" filename to identify runtime configuration
    files is deprecated; configuration files should now be named
    Config.prc, or in general, *.prc.  The system-default
    configuration files are auto-generated as 20_panda.prc,
    30_pandatool.prc, and 40_direct.prc (the numeric prefixes control
    the order in which these are loaded at runtime).

Rendering system:

  * Some deprecated methods of CollisionEntry have been flagged to
    raise an exception now; these are replaced with the newer
    interfaces that can return a collision point in an arbitrary
    coordinate system.

  * Camera::set_cull_center() can be used for debugging culling by
    setting the effective point of visibility culling different from
    the actual point.  From Python, use base.oobeCull() to examine
    this effect.

  * Alt-Enter in pview toggles between fullscreen and windowed modes.

  * Added experimental support for GL display lists.

Scene graph:

  * Exposed methods to directly retrieve and set the individual
    vertices of a GeomNode from Python code.

  * The new PortalNode defines the interface for Panda's new
    cell-portal visibility system; each PortalNode is a window into
    another zone, or a separate subgraph; the PortalNode can hide or
    show the subset of its zone's geometry visible through its
    "portal".

  * The new PolylightNode applies a simple lighting-like effect
    without actually using lighting; objects will brighten or darken
    as a whole according to their proximity to the light.  Use
    PolylightEffect to enable this effect.

  * The new FadeLODNode works like ordinary LODNode, but the switches
    are alpha-blended in over a short period of time rather than
    popping immediately.

Text display:

  * Text now supports embedded mode changes--special characters to
    switch fonts, colors, scale, etc. within a line or within a
    paragraph.

  * Windows IME is better supported by Panda/Direct widgets
    (e.g. PGEntry and/or DirectEntry) in fullscreen mode as well as in
    windowed mode.

Model converters:

  * dxf2egg and egg2dxf added to converters, as well as to inline
    conversion supported via ptloader.



------------------------  RELEASE 2004-03-29  ------------------------

Miscellaneous:

  * We once again support the Microsoft VC6 compiler.

  * The "pstats" program is now provided in the Windows environment as
    part of pandatool.  It is similar to "gtk-stats" on a Unix
    environment, and can be used to view a real-time graph of
    performance timing in a running Panda process.  See
    panda/src/doc/howto.use_pstats.

  * New session recording and playback support allows capturing user
    and network input to a disk file, for replaying later, offline.
    Use "record-session filename.boo" and "playback-session
    filename.boo" in your Configrc file.

  * The genPyCode script now uses PythonWare's SqueezeTool to
    "squeeze" the large number of generated .py files into a single
    shared library, for substantially improved startup times on
    Windows.

  * The Task system now has substantially reduced overhead when many
    doLater's are waiting in the system.

  * The png image file type is now supported.


Rendering system:

  * Introducing native DirectX9 graphics support, although we do not
    yet support any features specific to DirectX9, such as
    programmable shaders.

  * DirectX7 and DirectX8 modules are now somewhat more robust.

  * New support for offscreen rendering and render-to-a-texture, which
    will become part of a general multipass-rendering interface.
    Presently supported in OpenGL, with limited DirectX support.  Use
    GraphicsWindow::make_texture_buffer() to make a buffer you can
    render into and apply the result as a texture map to objects in
    your scene.  The NonlinearImager in the distort directory is a
    complex example of using this interface.

  * Explicit support for the Mesa 3D library's software-based
    offscreen rendering, allowing a Panda program to generate
    offscreen images as a background process, independently of any
    graphics card or desktop environment.

  * GraphicsLayer and GraphicsWindow render order can now be easily
    adjusted dynamically with set_sort() methods.

  * Built-in frame rate meter can be activated by setting
    "show-frame-rate-meter 1" in your Configrc file.


Scene graph:

  * New tag system on PandaNodes allows storing of arbitrary string
    data on nodes, keyed by a string dictionary.  The
    NodePath::get_net_tag() interface retrieves the data value for a
    particular tag on a node or the nearest ancestor of the node.
    NodePath::find() can search for a node in the scene graph with a
    given tag or tag/value pair.

  * Explicit shear transforms are now supported on nodes, as well as
    in character animation tables.

  * Characters now have an interface to control joint and slider
    values dynamically, instead of strictly from an animation file.
    Use Actor.exposeJoint() and/or Actor.controlJoint().

  * Nurbs surfaces and curves can now be rendered directly by Panda,
    which will tesselate them on the fly at some CPU cost.  This is a
    modeling convenience only; it is not intended to be used for
    production code.  Triangle strips are still the fastest way to
    render complex surfaces.

  * However, Rope.py is now provided as a high-level wrapper around
    Panda's runtime NURBS curve evaluator; it can render dynamic
    curves in a variety of ways.

  * The egg library is now published to Python, allowing construction
    of geometry on-the-fly by show code for convenience.  This is also
    intended as a developer's convenience more than a production
    feature.


Text display:

  * The special character \3 (ASCII 0x03) embedded in a text string
    indicates the position of a soft hyphen when wordwrap mode is in
    effect.  The character \4 (ASCII 0x04) serves as a hyphenless
    invisible break point.

  * A default font is compiled in even if the FreeType library is not
    available.

  * pnmtext library added for rendering text directly into an image.

  * New egg-mkfont utility uses FreeType to generate static font
    models that Panda clients without FreeType can use to render text.


Collision and physics system:

  * More robust collision interface, supporting NodePaths properly so
    that collisions detected into (and from) particular instances of
    nodes can be differentiated.  CollisionEntry has a much simpler
    mechanism for getting the intersection point and normal in an
    arbitrary coordinate space defined by a NodePath, instead of the
    user having to convert the coordinate space by hand.

  * New CollisionVisualizer object to visually show collisions as they
    are tested and detected, useful for optimizing collision
    performance.  Activate this with
    base.cTrav.showCollisions(render).

  * Implicit velocity system is now integrated with scene graph; the
    relative velocity of moving nodes is automatically considered when
    testing for most kinds of collisions.  Use
    NodePath::set_fluid_pos() to indicate that a node is moving
    fluidly to its new position and should test for collisions along
    the way (as opposed to the more traditional NodePath::set_pos(),
    which unconditionally sets the node to its new position).

  * Introduction of "tube" collision shapes, sometimes called
    "capsules" in other libraries.  It is a cylinder capped with
    hemispheres.

  * CollisionSolid::set_effective_normal() provides a way to define a
    sloping surface with an apparently vertical normal, to prevent
    characters standing on the surface from sliding down.

  * Collision polygons now respect clipping planes.

  * Many changes to physics system.


HTTPClient and net systems:

  * More verbose error reporting.

  * Better support for proxy servers, including SOCKS5 proxies.


Model converters:

  * maya2egg converter now supports skeleton/morph animation files
    fully, including soft-skinning, hard-skinning, and morphs (blend
    shapes).  NURBS and polygon meshes are both supported.

  * A new Maya plugin called libmayapview allows opening a Panda
    window from within Maya to view how the scene will look once it
    has been converted to Panda.

  * New soft2egg converter supports models and animation stored in
    SoftImage 4.3 files.  (Newer versions of SoftImage are not
    supported.)

  * New egg2flt program more or less reverses flt2egg.

  * The ptloader Panda loader allows direct loading into Panda of most
    model file types defined within pandatool: Maya, flt, and lwo.
    Specify load-file-type ptloader in your Configrc file.

  * New egg-optchar preprocessor improves character animation runtime
    performance by eliminating unneeded joints.  It can also
    reorganize a skeleton and/or expose joints for the show code's
    convenience.

  * New egg-qtess utility converts NURBS egg files to polygon egg
    files with either a trivial interface for quick conversions or a
    sophisticated parameter file for more precise control.  It
    preserves soft-skinning and animation information.

  * New visibility flag in egg format allows model files to define
    invisible subtrees which will be initially stashed when loaded.

  * The egg library now allows implicit forward references to vertex
    pools, making it much easier to generate a valid egg file from a
    third-party model format.
